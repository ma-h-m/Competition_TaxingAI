2024-05-21 16:41:21,097 INFO    MainThread:187858 [wandb_setup.py:_flush():76] Current SDK version is 0.17.0
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_setup.py:_flush():76] Configure stats pid to 187858
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_setup.py:_flush():76] Loading settings from /home/mhm/.config/wandb/settings
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_setup.py:_flush():76] Loading settings from /home/mhm/workspace/Competition_TaxingAI/wandb/settings
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'TaxAI_modified/main.py', 'program_abspath': '/home/mhm/workspace/Competition_TaxingAI/TaxAI_modified/main.py', 'program': '/home/mhm/workspace/Competition_TaxingAI/TaxAI_modified/main.py'}
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_setup.py:_flush():76] Applying login settings: {}
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_init.py:_log_setup():520] Logging user logs to /home/mhm/workspace/Competition_TaxingAI/wandb/run-20240521_164121-5xyqa1pw/logs/debug.log
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_init.py:_log_setup():521] Logging internal logs to /home/mhm/workspace/Competition_TaxingAI/wandb/run-20240521_164121-5xyqa1pw/logs/debug-internal.log
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_init.py:init():560] calling init triggers
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_init.py:init():567] wandb.init called with sweep_config: {}
config: {'_metadata': ContainerMetadata(ref_type=typing.Any, object_type=<class 'dict'>, optional=True, key='Trainer', flags={}, flags_root=False, resolver_cache=defaultdict(<class 'dict'>, {}), key_type=typing.Any, element_type=typing.Any), '_parent': {'expr_name': 'test', 'log_dir': './logs', 'seed': 2, 'device_num': 1, 'Environment': {'Entities': [{'entity_name': 'government', 'entity_args': {'n': 1, 'action_shape': 5}}, {'entity_name': 'household', 'entity_args': {'n': 1000, 'CRRA': 1, 'IFE': 2, 'eta': 0, 'action_shape': 2, 'e_p': 2.2e-06, 'e_q': 0.99, 'rho_e': 0.982, 'sigma_e': 0.2, 'super_e': 504.3}}], 'env_core': {'possible_agents': ['government', 'households'], 'env_args': {'alpha': '1/3', 'year_per_step': 1, 'depreciation_rate': 0.06, 'consumption_tax_rate': 0.065, 'interest_rate': 0.04, 'gini_weight': 1, 'gov_task': 'gdp'}}}, 'Trainer': {'n_households': 1000, 'log_std_min': -20, 'log_std_max': 2, 'hidden_size': 128, 'cuda': True, 'q_lr': 0.0003, 'p_lr': 0.0003, 'buffer_size': 1000000.0, 'env_name': 'wealth_distribution', 'init_exploration_policy': 'gaussian', 'n_epochs': 1500, 'epoch_length': 500, 'update_cycles': 10, 'target_update_interval': 1, 'display_interval': 1, 'batch_size': 128, 'gamma': 0.975, 'tau': 0.005, 'eval_episodes': 10, 'init_exploration_steps': 1000, 'ppo_tau': 0.95, 'ppo_gamma': 0.99, 'eps': 1e-05, 'update_epoch': 20, 'clip': 0.1, 'vloss_coef': 0.5, 'ent_coef': 0.01, 'max_grad_norm': 0.5, 'update_freq': 2, 'initial_train': 100, 'noise_rate': 0.1, 'epsilon': 0.1, 'save_interval': 100}}, '_flags_cache': {'struct': None, 'readonly': None, 'convert': None, 'allow_objects': None}, '_content': {'n_households': 1000, 'log_std_min': -20, 'log_std_max': 2, 'hidden_size': 128, 'cuda': True, 'q_lr': 0.0003, 'p_lr': 0.0003, 'buffer_size': 1000000.0, 'env_name': 'wealth_distribution', 'init_exploration_policy': 'gaussian', 'n_epochs': 1500, 'epoch_length': 500, 'update_cycles': 10, 'target_update_interval': 1, 'display_interval': 1, 'batch_size': 128, 'gamma': 0.975, 'tau': 0.005, 'eval_episodes': 10, 'init_exploration_steps': 1000, 'ppo_tau': 0.95, 'ppo_gamma': 0.99, 'eps': 1e-05, 'update_epoch': 20, 'clip': 0.1, 'vloss_coef': 0.5, 'ent_coef': 0.01, 'max_grad_norm': 0.5, 'update_freq': 2, 'initial_train': 100, 'noise_rate': 0.1, 'epsilon': 0.1, 'save_interval': 100}}
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_init.py:init():610] starting backend
2024-05-21 16:41:21,098 INFO    MainThread:187858 [wandb_init.py:init():614] setting up manager
2024-05-21 16:41:21,100 INFO    MainThread:187858 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-05-21 16:41:21,102 INFO    MainThread:187858 [wandb_init.py:init():622] backend started and connected
2024-05-21 16:41:21,104 ERROR   MainThread:187858 [wandb_init.py:init():1174] error in wandb.init()
Traceback (most recent call last):
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/site-packages/wandb/sdk/wandb_init.py", line 1164, in init
    return wi.init()
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/site-packages/wandb/sdk/wandb_init.py", line 627, in init
    run = Run(
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 594, in __init__
    self._init(
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 709, in _init
    self._config._update(config, ignore_locked=True)
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/site-packages/wandb/sdk/wandb_config.py", line 177, in _update
    sanitized = self._sanitize_dict(
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/site-packages/wandb/sdk/wandb_config.py", line 264, in _sanitize_dict
    k, v = self._sanitize(k, v, allow_val_change)
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/site-packages/wandb/sdk/wandb_config.py", line 282, in _sanitize
    val = json_friendly_val(val)
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/site-packages/wandb/util.py", line 671, in json_friendly_val
    converted = asdict(val)
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/dataclasses.py", line 1075, in asdict
    return _asdict_inner(obj, dict_factory)
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/dataclasses.py", line 1082, in _asdict_inner
    value = _asdict_inner(getattr(obj, f.name), dict_factory)
  File "/home/mhm/anaconda3/envs/taxingai-venv/lib/python3.9/dataclasses.py", line 1112, in _asdict_inner
    return type(obj)((_asdict_inner(k, dict_factory),
TypeError: first argument must be callable or None
